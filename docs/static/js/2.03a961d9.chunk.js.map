{"version":3,"sources":["controller/swiper.ts","views/Swiper.tsx","site/pages/swiper/index.js","../node_modules/_@babel_runtime@7.8.7@@babel/runtime/helpers/esm/createClass.js","controller/event.ts","controller/move.ts"],"names":["SwiperControl","curIdx","direction","len","justifyDistance","swiperRange","range","this","lockDirection","distance","endPoint","MoveControl","Swiper","refSwiper","children","width","height","className","useState","curSwiperIdx","setCurTabIdx","x","y","swiperPoint","setSwiperPoint","tansitionStyle","setTansitionStyle","swiperControl","length","swiperClassNames","swiperStyle","getValOrDefault","onStartHander","event","start","onMoveHander","point","move","onEndHander","end","getIndex","useEffect","setSwiperRange","offsetWidth","offsetHeight","eventControl","EventControl","createEventList","listenerAllOfEle","removeAllOfEle","concat","getClassName","ref","ele","style","transform","transition","SwiperNav","curActiveIdx","Array","fill","map","val","idx","key","TestContent","background","display","justifyContent","alignItems","Item","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype","eventList","willPreventDefault","willNotPreventDefault","$ele","isPassiveSupported","passiveSupported","passive","capture","window","touchstart","touchmove","touchend","mousedown","mousemove","mouseup","keys","forEach","pd","indexOf","addEventListener","removeEventListener","zeroPoint","JSON","stringify","startPoint","Prevent_Distance","isAnm","parse","Error","absX","Math","abs","absY","getEventPoint","pageX","pageY","_resetSomething","preventDefault","assign","getMoveDist","_getLockDirection","_getFinalEndPonit"],"mappings":"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","file":"static/js/2.03a961d9.chunk.js","sourcesContent":["import MoveControl from './move';\r\n\r\ntype Point = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\ntype Direction = 'x' | 'y';\r\n\r\ninterface SwiperControlProps {\r\n    curIdx: number,\r\n    direction: Direction,\r\n    len: number,\r\n    justifyDistance?: number,\r\n}\r\n\r\nclass SwiperControl extends MoveControl {\r\n\r\n    swiperRange: number;\r\n    justifyDistance: number;\r\n    len: number;\r\n    curIdx: number;\r\n\r\n    constructor({curIdx = 0, direction = 'x', len, justifyDistance = 33}: SwiperControlProps) {\r\n        super({\r\n            direction,\r\n        });\r\n        this.len = len;\r\n        this.curIdx = curIdx;\r\n        this.justifyDistance = justifyDistance;\r\n        this.swiperRange = 0;\r\n    }\r\n\r\n    // 可能横竖屏 或者 使用者改变 Swiper大小\r\n    // 所以宽高是动态获取的\r\n    setSwiperRange(range: number) {\r\n        this.swiperRange = range;\r\n    }\r\n\r\n    getIndex(): number {\r\n        return this.curIdx;\r\n    }\r\n\r\n    // 终止时位置调整\r\n    _getFinalEndPonit(): Point {\r\n        if (this.direction === this.lockDirection) {\r\n            const distance = this.distance[this.direction];\r\n            if (distance > this.justifyDistance) {\r\n                if (this.curIdx < this.len - 1) {\r\n                    this.curIdx++;\r\n                    this.endPoint[this.direction] -= this.swiperRange;\r\n                }\r\n            } else if (distance < this.justifyDistance) {\r\n                if (this.curIdx > 0) {\r\n                    this.curIdx--;\r\n                    this.endPoint[this.direction] += this.swiperRange;\r\n                }\r\n            }\r\n        }\r\n        return this.endPoint;\r\n    }\r\n\r\n}\r\n\r\nexport default SwiperControl;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport SwiperControl from '../controller/swiper';\r\nimport { getClassName, getValOrDefault } from '../utils/base';\r\nimport EventControl from '../controller/event';\r\n\r\ntype UseEvent = React.TouchEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement>;\r\n\r\ninterface SwiperProps {\r\n    children: React.ReactNodeArray,\r\n    width: string,\r\n    height: string,\r\n    direction: 'x' | 'y',\r\n    className: string\r\n}\r\n\r\nexport default function Swiper ({\r\n            children, width, height,\r\n            direction = 'x', className\r\n        }: SwiperProps) {\r\n    \r\n    const [curSwiperIdx, setCurTabIdx] = useState(0);\r\n    const [swiperPoint, setSwiperPoint] = useState({ x: 0, y: 0});\r\n    const [tansitionStyle, setTansitionStyle] = useState('');\r\n\r\n    const swiperControl = new SwiperControl({\r\n        curIdx: 0,\r\n        direction,\r\n        len: children.length\r\n    });\r\n\r\n    let refSwiper: HTMLDivElement | null;\r\n\r\n    const swiperClassNames = {\r\n        [className]: !!className,\r\n        [`zui-swiper-${direction}`]: true\r\n    }\r\n\r\n    const swiperStyle: React.CSSProperties = {\r\n        width: getValOrDefault(width, ''),\r\n        height: getValOrDefault(height, '')\r\n    }\r\n\r\n    const onStartHander = (event: UseEvent) => {\r\n        swiperControl.start(event);\r\n        setTansitionStyle('');\r\n    }\r\n\r\n    const onMoveHander = (event: UseEvent) => {\r\n        const point = swiperControl.move(event);\r\n        setSwiperPoint(point);\r\n    }\r\n\r\n    const onEndHander = () => {\r\n        const point = swiperControl.end();\r\n        setCurTabIdx(swiperControl.getIndex());\r\n        setSwiperPoint(point);\r\n        setTansitionStyle('all 0.3s');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (direction === 'x') {\r\n            swiperControl.setSwiperRange(refSwiper!.offsetWidth);\r\n        } else {\r\n            swiperControl.setSwiperRange(refSwiper!.offsetHeight);\r\n        }\r\n\r\n        const eventControl = new EventControl(refSwiper as HTMLDivElement);\r\n        eventControl.createEventList(onStartHander, onMoveHander, onEndHander);\r\n        eventControl.listenerAllOfEle();\r\n\r\n        return () => {\r\n            eventControl.removeAllOfEle();\r\n        };\r\n    }, [])\r\n\r\n    return <div className={'zui-swiper'.concat(getClassName(swiperClassNames))}\r\n        ref={ele => refSwiper = ele}\r\n        style={swiperStyle}>\r\n        <div className=\"zui-swiper-body\" style={{\r\n            transform: `translate(${swiperPoint.x}px, ${swiperPoint.y}px)`,\r\n            transition: tansitionStyle\r\n        }}>\r\n            { children }\r\n        </div>\r\n        <SwiperNav\r\n            len={children.length}\r\n            curActiveIdx={curSwiperIdx}\r\n        ></SwiperNav>\r\n    </div>\r\n}\r\n\r\nSwiper.Item = ({children}: {children: React.ReactNode}): JSX.Element => {\r\n    return <div className=\"zui-swiper-item\">{children}</div>\r\n};\r\n\r\nfunction SwiperNav({len, curActiveIdx}: {\r\n            len: number,\r\n            curActiveIdx: number\r\n        }): JSX.Element {\r\n    return <div className=\"zui-swiper-nav-box\">\r\n        {\r\n            Array(len).fill('').map((val, idx) => \r\n            <span\r\n                key={idx}\r\n                className={'zui-swiper-nav'.concat(curActiveIdx === idx ? ' active' : '')}\r\n            ></span>)\r\n        }\r\n    </div>\r\n}\r\n","import React from 'react';\r\n\r\nimport Swiper from '../../../views/Swiper';\r\n\r\nfunction TestContent({val, children}) {\r\n    return <div style={{\r\n        height: '100%',\r\n        // background: `rgb(33, 133, ${val*51})`,\r\n        background: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }}>{children}{val}</div>\r\n}\r\n\r\nexport default () => {\r\n    return <div>\r\n        <Swiper height={'333px'} direction=\"y\">\r\n            {\r\n                [1,2,3,4,5].map(val => <Swiper.Item key={val}>\r\n                    <TestContent val={val}>上下滑</TestContent>\r\n                </Swiper.Item>)\r\n            }\r\n        </Swiper>\r\n        <br></br>\r\n        <Swiper height={'333px'}>\r\n            {\r\n                [1,2,3,4,5].map(val => <Swiper.Item key={val}>\r\n                    <TestContent val={val}>左右滑</TestContent>\r\n                </Swiper.Item>)\r\n            }\r\n        </Swiper>\r\n    </div>\r\n}\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { passiveSupported } from \"../utils/base\";\r\n\r\nclass EventControl {\r\n    \r\n    eventList: {[key: string]: Function};\r\n    willPreventDefault: object | boolean;\r\n    willNotPreventDefault: object | boolean;\r\n    $ele: HTMLDivElement;\r\n\r\n    constructor(ele: HTMLDivElement) {\r\n        this.eventList = {};\r\n        const isPassiveSupported = passiveSupported();\r\n        this.willPreventDefault = isPassiveSupported ? { passive: false, capture: false } : false;\r\n        this.willNotPreventDefault = isPassiveSupported ? { passive: true } : false;\r\n        this.$ele = ele;\r\n    }\r\n\r\n    createEventList(start: Function, move: Function, end: Function) {\r\n        if ('ontouchstart' in window) {\r\n            this.eventList =  {\r\n                touchstart: start,\r\n                touchmove: move,\r\n                touchend: end,\r\n            }\r\n        } else {\r\n            this.eventList =  {\r\n                mousedown: start,\r\n                mousemove: move,\r\n                mouseup: end,\r\n            }\r\n        }\r\n    }\r\n\r\n    listenerAllOfEle() {\r\n        Object.keys(this.eventList).forEach(key => {\r\n            const pd = key.indexOf('move') >= 0 ? this.willPreventDefault : this.willNotPreventDefault;\r\n            this.$ele.addEventListener(key, this.eventList[key] as any, pd as any);\r\n        })\r\n    }\r\n\r\n    removeAllOfEle() {\r\n        Object.keys(this.eventList).forEach(key => {\r\n            this.$ele.removeEventListener(key, this.eventList[key] as any);\r\n        })\r\n    }\r\n}\r\n\r\nexport default EventControl;\r\n","import { getEventPoint } from \"../utils/base\";\r\n\r\ntype Point = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\ntype Direction = 'x' | 'y';\r\n\r\ntype UseEvent = React.TouchEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement>;\r\n\r\ninterface MoveControlProps {\r\n    direction?: Direction\r\n}\r\n\r\nconst zeroPoint = JSON.stringify({ x: 0, y: 0 });\r\n\r\nclass MoveControl {\r\n\r\n    startPoint: Point;\r\n    distance: Point;\r\n    endPoint: Point;\r\n    direction: Direction;\r\n    Prevent_Distance: number;\r\n    lockDirection: Direction | null;\r\n    isAnm: boolean;\r\n\r\n    constructor({direction = 'x'}: MoveControlProps) {\r\n        this.direction = direction;\r\n        this.startPoint = JSON.parse(zeroPoint);\r\n        this.distance = JSON.parse(zeroPoint);\r\n        this.endPoint = JSON.parse(zeroPoint);\r\n        this.Prevent_Distance = 5;\r\n        this.lockDirection = null;\r\n        this.isAnm = false;\r\n    }\r\n\r\n    // 终止时位置调整\r\n    _getFinalEndPonit(): Point {\r\n        throw Error('_getFinalEndPonit 需要被重写');\r\n    }\r\n\r\n    // 起点重置项\r\n    _resetSomething() {\r\n        // 需要时重写\r\n        this.distance[this.direction] = 0;\r\n    }\r\n\r\n    // 方向锁定\r\n    _getLockDirection(): Direction | null {\r\n        const absX = Math.abs(this.distance.x);\r\n        const absY = Math.abs(this.distance.y);\r\n\r\n        let lockDirection: Direction | null = null;\r\n\r\n        if (this.direction === 'x') {\r\n            if (absX >= absY && absX > this.Prevent_Distance) {\r\n                lockDirection = 'x';\r\n            } else if (absY > this.Prevent_Distance) {\r\n                lockDirection = 'y';\r\n            }\r\n        } else {\r\n            if (absY >= absX && absY > this.Prevent_Distance) {\r\n                lockDirection = 'y';\r\n            } else if (absX > this.Prevent_Distance) {\r\n                lockDirection = 'x';\r\n            }\r\n        }\r\n        \r\n        return lockDirection;\r\n    }\r\n\r\n    // 移动过程中的移动距离 = 最后停留点 - 触摸点移动距离\r\n    getMoveDist() {\r\n        const dist = this.endPoint[this.direction] - this.distance[this.direction];\r\n        return dist;\r\n    }\r\n\r\n    start(event: UseEvent): void {\r\n        this.isAnm = true;\r\n        const point = getEventPoint(event);\r\n        this.lockDirection = null;\r\n        this.startPoint = {\r\n            x: point.pageX,\r\n            y: point.pageY\r\n        }\r\n        this._resetSomething();\r\n    }\r\n\r\n    // 移动时：获取移动距离\r\n    move(event: UseEvent): Point {\r\n        if (this.isAnm) {\r\n            const point = getEventPoint(event);\r\n            this.distance = {\r\n                x: this.startPoint.x - point.pageX,\r\n                y: this.startPoint.y - point.pageY,\r\n            }\r\n            if (!this.lockDirection) {\r\n                this.lockDirection = this._getLockDirection();\r\n                if (this.direction === 'y' && event.preventDefault) {\r\n                    event.preventDefault();\r\n                } \r\n            } else if (this.direction === this.lockDirection) {\r\n                event.preventDefault && event.preventDefault();\r\n                return Object.assign({x: 0, y: 0}, {[this.direction]: this.getMoveDist()})\r\n            }\r\n        }\r\n        // 如果return movePoint 那么位置不变\r\n        return this.endPoint;\r\n    }\r\n\r\n    end(): Point {\r\n        this.isAnm = false;\r\n        return this._getFinalEndPonit();\r\n    }\r\n\r\n}\r\n\r\nexport default MoveControl;\r\n"],"sourceRoot":""}