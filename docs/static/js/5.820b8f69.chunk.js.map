{"version":3,"sources":["site/pages/sheet/index.js","views/Transition.tsx","views/Sheet.tsx"],"names":["TestContent","Array","fill","map","val","idx","key","TestSheet","style","margin","titleTxt","canModalClose","button","Transition","name","isShow","children","time","initName","useState","transitionName","setName","isConShow","setConShow","useEffect","setTimeout","console","log","React","Children","child","childTs","cloneElement","className","props","Sheet","setIsShow","ShowSomething","showSomething","closeSheet","renderElement","SheetContent","destroy","onClick","header","e","stopPropagation","ensureHandler"],"mappings":"uGAAA,0CAKA,SAASA,IACL,OAAOC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAKC,GAAN,OAAc,yBAAKC,IAAKD,GAAV,4BAAqBA,MAcrDE,UAXf,WACI,OAAO,yBAAKC,MAAO,CAACC,OAAQ,cACxB,kBAAC,IAAD,CACIC,SAAS,0BACTC,eAAa,EACbC,OAAQ,kBAAC,IAAD,uCACR,kBAACZ,EAAD,U,4DCNG,SAASa,EAAT,GAA4E,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,SAAwC,IAA9BC,YAA8B,MAAvB,IAAuB,EAEhFC,EAAWJ,GAAQ,GAF6D,EAIpDK,mBAAS,IAJ2C,mBAI/EC,EAJ+E,KAI/DC,EAJ+D,OAKtDF,mBAASJ,GAL6C,mBAK/EO,EAL+E,KAKpEC,EALoE,KAwBtF,OAjBAC,qBAAU,WACFT,GACAQ,EAAWR,GACXU,YAAW,WACPJ,EAAQ,GAAD,OAAIH,EAAJ,WACR,MAEHQ,QAAQC,IAAI,OACZN,EAAQ,GAAD,OAAIH,EAAJ,UAEPO,YAAW,WACPJ,EAAQ,IACRE,GAAW,KACZN,MAER,CAACF,IAEG,oCAECO,EACIM,IAAMC,SAAS1B,IAAIa,GAAU,SAACc,GAC1B,IAAMC,EAAUD,EAChB,OAAOF,IAAMI,aAAaD,EACtB,CACIE,UAAU,GAAD,OAAMF,EAAQG,MAAMD,UAApB,YAAiCb,QAKpD,M,YC/BF,SAASe,EAAMD,GAAoB,IAAD,EAClBf,oBAAS,GADS,mBACvCJ,EADuC,KAC/BqB,EAD+B,OAEtBjB,mBAAS,IAAIkB,KAA9BC,EAFuC,oBAQxCC,EAAa,WACfH,GAAU,IAYdZ,qBAAU,WACNc,EAAcE,cAAcC,MAGhCjB,qBAAU,WACN,OAAO,kBAAMc,EAAcI,aAC5B,IAEH,IAAMD,EACF,kBAAC5B,EAAD,CAAYC,KAAK,YAAYC,OAAQA,GACjC,yBAAKkB,UAAU,iBACX,yBAAKA,UAAU,iBAAiBU,QA5BvB,WACjBP,GAAU,MA6BF,yBAAKH,UAAU,kBAGPC,EAAMU,OACFV,EAAMU,OACN,yBAAKX,UAAU,oBACX,yBAAKU,QAASJ,GAAd,gBACA,6BAAML,EAAMxB,UAAY,IACxB,yBAAKiC,QA9BZ,SAACE,GAElBA,EAAEC,kBACiC,oBAAxBZ,EAAMa,eACbb,EAAMa,gBAEVR,MAwBwB,iBAIZ,yBACIN,UAAU,kBACZC,EAAMlB,aAMxB,OAAO,oCACH,yBAAK2B,QAAS,kBAAMP,GAAU,KAAQF,EAAMtB,S","file":"static/js/5.820b8f69.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Sheet from '../../../views/Sheet';\r\nimport Button from '../../../views/Button';\r\n\r\nfunction TestContent() {\r\n    return Array(22).fill(0).map((val, idx) => <div key={idx}>内容部分 {idx}</div>)\r\n}\r\n\r\nfunction TestSheet() {\r\n    return <div style={{margin: '33px 16px'}}>\r\n        <Sheet\r\n            titleTxt='sheet的标题'\r\n            canModalClose\r\n            button={<Button>点击弹出Sheet</Button>}>\r\n            <TestContent></TestContent>\r\n        </Sheet>\r\n    </div>\r\n}\r\n\r\nexport default TestSheet;","import React, {useState, useEffect} from 'react';\r\n\r\ninterface TransitionProps {\r\n    name: string,\r\n    isShow: boolean,\r\n    children: React.ReactNode,\r\n    time?: number\r\n}\r\n\r\nexport default function Transition({name, isShow, children, time = 300}: TransitionProps) {\r\n\r\n    const initName = name || '';\r\n\r\n    const [transitionName, setName] = useState('');\r\n    const [isConShow, setConShow] = useState(isShow);\r\n\r\n    useEffect(() => {\r\n        if (isShow) {\r\n            setConShow(isShow);\r\n            setTimeout(() => {\r\n                setName(`${initName}--in`);\r\n            }, 18); // 下一帧 > 16.67\r\n        } else {\r\n            console.log('out')\r\n            setName(`${initName}--out`);\r\n            // 正常关闭\r\n            setTimeout(() => {\r\n                setName('');\r\n                setConShow(false);\r\n            }, time);\r\n        }\r\n    }, [isShow])\r\n\r\n    return <>\r\n        {\r\n            isConShow ?\r\n                React.Children.map(children, (child) => {\r\n                    const childTs = child as React.DetailedReactHTMLElement<any, HTMLElement>;\r\n                    return React.cloneElement(childTs,\r\n                        {\r\n                            className:  `${childTs.props.className} ${transitionName}`,\r\n                        },\r\n                        // children // 外包裹\r\n                    )\r\n                })\r\n                : null\r\n        }\r\n    </>\r\n}\r\n","import React, { useState, ReactNode, MouseEvent, useEffect } from 'react';\r\nimport Transition from './Transition';\r\n\r\nimport { ShowSomething } from '../views-show/dialog';\r\n\r\ninterface SheetProps {\r\n    children: ReactNode,\r\n    button: ReactNode, // 触发Sheet的按钮\r\n    header?: ReactNode,\r\n    titleTxt?: string,\r\n    canModalClose?: boolean,\r\n    ensureHandler?: Function\r\n}\r\n\r\nexport default  function Sheet(props: SheetProps) {\r\n    const [isShow, setIsShow] = useState(false);\r\n    const [showSomething] = useState(new ShowSomething());\r\n\r\n    const modalHandler = () => {\r\n        setIsShow(false);\r\n    }\r\n\r\n    const closeSheet = () => {\r\n        setIsShow(false);\r\n    }\r\n\r\n    const clickHandler = (e: MouseEvent<HTMLElement>): void => {\r\n        // e.cancelBubble = true; // 阻止冒泡\r\n        e.stopPropagation(); // 阻止冒泡\r\n        if (typeof props.ensureHandler === 'function') {\r\n            props.ensureHandler();\r\n        }\r\n        closeSheet();\r\n    }\r\n\r\n    useEffect(() => {\r\n        showSomething.renderElement(SheetContent);\r\n    });\r\n\r\n    useEffect(() => {\r\n        return () => showSomething.destroy();\r\n    }, [])\r\n\r\n    const SheetContent = (\r\n        <Transition name=\"zui-sheet\" isShow={isShow}>\r\n            <div className='zui-sheet-box'>\r\n                <div className=\"zui-sheet-mask\" onClick={modalHandler}></div>\r\n                {/* sheet主体 */}\r\n                <div className=\"zui-sheet-area\">\r\n                    {/* 头部信息 */}\r\n                    {\r\n                        props.header ?\r\n                            props.header :\r\n                            <div className=\"zui-sheet-header\">\r\n                                <div onClick={closeSheet}>取消</div>\r\n                                <div>{props.titleTxt || ''}</div>\r\n                                <div onClick={clickHandler}>确定</div>\r\n                            </div>\r\n                    }\r\n                    {/* 内容部分 */}\r\n                    <div\r\n                        className=\"zui-sheet-body\"\r\n                    >{props.children}</div>\r\n                </div>\r\n            </div>\r\n        </Transition>\r\n    )\r\n    \r\n    return <>\r\n        <div onClick={() => setIsShow(true)}>{props.button}</div>\r\n    </>\r\n}\r\n"],"sourceRoot":""}